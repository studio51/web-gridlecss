- var name = 'GridleCSS'
- var description = 'Yet another flex grid framework!'
- var version = '1.0.rc1'

- var basic = 'GridleCSS'
- var basic_description = 'GridleCSS in all it\'s glory! Flexible cells, viewport specific rules and more..'

- var responsive = 'Responsive'
- var responsive_description = 'Responsive modifiers enable specifing different column sizes, offsets alignment and distribution at certain viewport widths.'

- var fluid = 'Fluid Layout'
- var fluid_description = 'Percent based widths allow fluid resizing of columns and rows'

- var offset = 'Offsets'
- var offset_description = ''
- var offset_viewport = 'Offsets by viewport'
- var offset_viewport_description = ''

- var nested = 'Gridcellceptional!'
- var nested_description = 'A cell, inside a row, inside a cell, inside a row.. oh you get it!'

- var auto = 'Auto GridleCSS'
- var auto_additional = 'Auto Width'
- var auto_additional_two = 'Auto Width on Viewport'
- var auto_description = ''
- var auto_additional_description = 'Add any number of auto sizing cells to a row. Let the grid figure it out'
- var auto_additional_two_description = 'You can also specify on which viewport the grid should figure it out whether or not it should apply it.'

- var alignment = 'Alignments'
- var alignment_description = ''
- var alignment_additional = 'Alignments on Parent elements'
- var alignment_additional_description = 'This defines the alignment along the main axis. It helps distribute extra free space left over when either all the flex items on a line are inflexible, or are flexible but have reached their maximum size.'
- var alignment_additional_two = ''
- var alignment_additional_two_description = 'Similar to the above except you can specify the behaviour of how flex-items are laid out along the cross axis, instead of main axis, of the current line.'
- var alignment_additional_three = 'Alignments on Child elements'
- var alignment_additional_three_description = 'This property will allow the default alignment, or the one specified on the parent to be overridden for indvidual flex items'
- var alignment_additional_four = 'Alignment by Viewport'
- var alignment_additional_four_description = 'You can also specify what alignment rule should be considered depending on the viewport by adding the viewport class'

- var distribution = 'Distribution'
- var distribution_description = ''
- var distribution_between = ''
- var distribution_between_description = 'Flex items are displayed with equal spacing between them, first and last flex items are aligned to the edges of the flex container'
- var distribution_around = ''
- var distribution_around_description = 'Flex items are displayed with equal spacing around every flex item, even the first and the last flex items'
- var distribution_viewport = 'Distribution by Viewport'
- var distribution_viewport_description = 'You can also specify what distribution rule should be considered depending on the viewport by adding the viewport class'

- var reversed = 'Reversing'
- var reversed_description = 'Add classes to reverse cells direction'

- var reordered = 'Reordering'
- var reordered_description = 'Add classes to reorder cells'
